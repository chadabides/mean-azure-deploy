{"version":3,"sources":["webpack:///server.js","webpack:///webpack/bootstrap d36204fc002a9ab83c46","webpack:///./buildScripts/distServer.js","webpack:///external \"express\"","webpack:///external \"path\"","webpack:///external \"compression\"","webpack:///external \"cookie-parser\"","webpack:///external \"body-parser\"","webpack:///external \"method-override\"","webpack:///./src/server/routes/movie.js","webpack:///./src/server/api/movies.js","webpack:///./src/server/data/db.js","webpack:///./src/server/core/logger.js","webpack:///external \"fs\"","webpack:///external \"rotating-file-stream\"","webpack:///external \"morgan\"","webpack:///external \"winston\"","webpack:///external \"moment\"","webpack:///external \"mongodb\""],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__dirname","_interopRequireDefault","obj","__esModule","default","_express","_express2","_path","_path2","_compression","_compression2","_cookieParser","_bodyParser","_bodyParser2","_methodOverride","_methodOverride2","_movie","_movie2","_logger","_logger2","_db","_db2","logger","cfg","consoleLevel","fileLevel","connect","then","log","error","port","process","env","PORT","app","use","urlencoded","extended","json","dev","set","join","req","res","next","err","message","status","stack","render","listen","require","Object","defineProperty","value","_movies","_movies2","router","Router","movieService","get","post","save","put","getbyId","remove","_classCallCheck","instance","Constructor","TypeError","_mongodb","_mongodb2","MovieService","this","getMovieCollection","db","collection","find","toArray","movies","movie","body","_id","ObjectID","trim","result","params","movieId","sendStatus","getMoviebyId","findOne","JSON","stringify","service","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","connectionString","Database","_this","dbconnection","arguments","undefined","MongoClient","_fs","_rotatingFileStream","_rotatingFileStream2","_morgan","_morgan2","_winston","_winston2","_moment","_moment2","s_logger","Symbol","defaultcfg","loggerService","_timeStamp","time","format","token","logDirectory","accessLogStream","interval","path","Logger","transports","File","level","filename","handleExceptions","maxsize","maxFiles","colorize","timestamp","prettyprint","Console","exitOnError","updateConfig","console","file","timeStamp","category","stream"],"mappings":"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","file":"server.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__dirname) {'use strict';\n\t\n\tvar _express = __webpack_require__(1);\n\t\n\tvar _express2 = _interopRequireDefault(_express);\n\t\n\tvar _path = __webpack_require__(2);\n\t\n\tvar _path2 = _interopRequireDefault(_path);\n\t\n\tvar _compression = __webpack_require__(3);\n\t\n\tvar _compression2 = _interopRequireDefault(_compression);\n\t\n\tvar _cookieParser = __webpack_require__(4);\n\t\n\tvar _cookieParser2 = _interopRequireDefault(_cookieParser);\n\t\n\tvar _bodyParser = __webpack_require__(5);\n\t\n\tvar _bodyParser2 = _interopRequireDefault(_bodyParser);\n\t\n\tvar _methodOverride = __webpack_require__(6);\n\t\n\tvar _methodOverride2 = _interopRequireDefault(_methodOverride);\n\t\n\tvar _movie = __webpack_require__(7);\n\t\n\tvar _movie2 = _interopRequireDefault(_movie);\n\t\n\tvar _logger = __webpack_require__(10);\n\t\n\tvar _logger2 = _interopRequireDefault(_logger);\n\t\n\tvar _db = __webpack_require__(9);\n\t\n\tvar _db2 = _interopRequireDefault(_db);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t//Add logger info\n\t\n\t\n\t//import other routes\n\t/** This is disables error in eslint for the next parameter in the error route below */\n\t/* eslint-disable no-unused-vars */\n\t\n\tvar logger = new _logger2.default();\n\t\n\t// sets config options on winston\n\tlogger.cfg({ consoleLevel: 'debug', fileLevel: 'error' });\n\t\n\t// Import Database Connection here\n\t\n\t\n\t//Database Connection go here\n\t_db2.default.connect('mongodb://api:!AgileRules4#@ds062059.mlab.com:62059/mic-pro').then(function () {\n\t  logger.log(\"Database is connected\");\n\t}).catch(function (error) {\n\t  logger.log(error, 'error');\n\t});\n\t\n\t// use process.env.PORT to set port when in production\n\tvar port = process.env.PORT || 3000;\n\tvar app = (0, _express2.default)();\n\t\n\tapp.use((0, _compression2.default)());\n\t\n\t//Set Up app folders\n\tapp.use(_express2.default.static('dist'));\n\tapp.use('/app', _express2.default.static('./src/client/app'));\n\t\n\tapp.use(_bodyParser2.default.urlencoded({\n\t  extended: true\n\t}));\n\tapp.use(_bodyParser2.default.json());\n\t\n\tapp.use((0, _methodOverride2.default)());\n\t\n\tapp.use(logger.dev);\n\t\n\t//Configure ejs vies\n\tapp.set('view engine', 'ejs');\n\tapp.set('views', _path2.default.join(__dirname, '../src/server/views/'));\n\t\n\t/** Mount Routes Here */\n\t//mount movie store module here\n\tapp.use('/movies', _movie2.default);\n\t\n\t//cause error to occur\n\tapp.use('/errortest', function (req, res, next) {\n\t  var err = { message: 'Test route is Testing Error Route', status: 509, stack: [{ message: 'An error test', status: 505 }, { message: 'From the Movie test error page', status: 501 }] };\n\t  next(err);\n\t});\n\t\n\t// production error handler\n\t// no stacktraces leaked to user\n\tapp.use(function (err, req, res, next) {\n\t  logger.log(err, 'error');\n\t  res.status(err['status'] || 500);\n\t  res.render('pages/error.ejs', {\n\t    message: err.message,\n\t    error: {}\n\t  });\n\t});\n\t\n\tapp.listen(port, function (err) {\n\t  logger.log('application started on Port:' + port, 'info');\n\t  if (err) {\n\t    logger.log(err);\n\t  }\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, \"/\"))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"express\");\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"path\");\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"compression\");\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"cookie-parser\");\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"body-parser\");\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"method-override\");\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _express = __webpack_require__(1);\n\t\n\tvar _express2 = _interopRequireDefault(_express);\n\t\n\tvar _movies = __webpack_require__(8);\n\t\n\tvar _movies2 = _interopRequireDefault(_movies);\n\t\n\tvar _logger = __webpack_require__(10);\n\t\n\tvar _logger2 = _interopRequireDefault(_logger);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar router = _express2.default.Router(); /* eslint-disable no-unused-vars */\n\t/* eslint-disable no-case-declarations */\n\t/** Restful Movie API routes */\n\t\n\tvar movieService = new _movies2.default();\n\tvar logger = new _logger2.default();\n\t\n\t// GET MOVIES\n\trouter.get('/', movieService.get);\n\t\n\t// ADD\n\trouter.post('/', movieService.save);\n\t\n\t//EDIT MOVIE\n\trouter.put('/', movieService.save);\n\t\n\t//get movie details\n\trouter.get('/:id', movieService.getbyId);\n\t\n\t// DELETE MOVIE\n\trouter.delete('/:id', movieService.remove);\n\t\n\texports.default = router;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _db = __webpack_require__(9);\n\t\n\tvar _db2 = _interopRequireDefault(_db);\n\t\n\tvar _logger = __webpack_require__(10);\n\t\n\tvar _logger2 = _interopRequireDefault(_logger);\n\t\n\tvar _mongodb = __webpack_require__(16);\n\t\n\tvar _mongodb2 = _interopRequireDefault(_mongodb);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar logger = new _logger2.default();\n\t\n\tvar MovieService = function MovieService() {\n\t  _classCallCheck(this, MovieService);\n\t\n\t  logger.log('Starting Movie AP', 'debug');\n\t  // ADD OR EDIT MOVIE\n\t\n\t\n\t  // GET MOVIES\n\t  var getMovieCollection = function getMovieCollection(req, res, next) {\n\t    _db2.default.db.collection('movies').find().toArray().then(function (movies) {\n\t      res.json(movies);\n\t    }).catch(function (error) {\n\t      logger.log('Mongo has a problem: ' + error, 'debug');\n\t      next(error);\n\t    });\n\t  };\n\t\n\t  var save = function save(req, res, next) {\n\t    var movie = req.body;\n\t    if (movie._id) movie._id = new _mongodb2.default.ObjectID(movie._id.trim());\n\t    _db2.default.db.collection('movies').save(req.body).then(function (result) {\n\t      if (result === null) {\n\t        logger.log('Errror on Save adding Movie to the database', 'debug');\n\t        next('Result was null');\n\t      } else {\n\t        res.json(result);\n\t      }\n\t    }).catch(function (error) {\n\t      logger.log('Mongo has a problem: ' + error, 'debug');\n\t      next(error);\n\t    });\n\t  };\n\t\n\t  // DELETE MOVIE\n\t  var remove = function remove(req, res, next) {\n\t    logger.log('Trying to remove movie is: ' + req.params['id'].trim(), 'info');\n\t    var movieId = new _mongodb2.default.ObjectID(req.params['id'].trim());\n\t    _db2.default.db.collection('movies').remove({ _id: movieId }).then(function () {\n\t      res.sendStatus(200);\n\t    }).catch(function (error) {\n\t      logger.log('Mongo has a problem: ' + error, 'debug');\n\t      next(error);\n\t    });\n\t  };\n\t  var getMoviebyId = function getMoviebyId(req, res, next) {\n\t    var movieId = new _mongodb2.default.ObjectID(req.params['id'].trim());\n\t    _db2.default.db.collection('movies').findOne(movieId).then(function (result) {\n\t      logger.log('the movie is ' + JSON.stringify(result), 'debug');\n\t      if (result === null) {\n\t        logger.log('No record Found', 'debug');\n\t        next('Result was null');\n\t      } else {\n\t        res.json(result);\n\t      }\n\t    }).catch(function (error) {\n\t      logger.log('Mongo has a problem: ' + error, 'debug');\n\t      next(error);\n\t    });\n\t  };\n\t  var service = {\n\t    get: getMovieCollection,\n\t    getbyId: getMoviebyId,\n\t    save: save,\n\t    remove: remove\n\t  };\n\t  //return service\n\t  return service;\n\t};\n\t\n\texports.default = MovieService;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /** This file is where tjhe backend database goes  */\n\t\n\t\n\tvar _logger = __webpack_require__(10);\n\t\n\tvar _logger2 = _interopRequireDefault(_logger);\n\t\n\tvar _mongodb = __webpack_require__(16);\n\t\n\tvar _mongodb2 = _interopRequireDefault(_mongodb);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar logger = new _logger2.default();\n\tvar connectionString = '';\n\t\n\tvar Database = function () {\n\t    function Database() {\n\t        _classCallCheck(this, Database);\n\t    }\n\t\n\t    _createClass(Database, null, [{\n\t        key: 'connect',\n\t        value: function connect() {\n\t            var _this = this;\n\t\n\t            var dbconnection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'mongodb://apiuser:!Agile$@ds117839.mlab.com:17839/live-exam-practice';\n\t\n\t            connectionString = dbconnection;\n\t            return _mongodb2.default.MongoClient.connect(connectionString).then(function (db) {\n\t                logger.log('successful db connection', 'info'); /* eslint-disable no-console */\n\t                _this.db = db;\n\t            }).catch(function (err) {\n\t                logger.error(err, 'error');\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return Database;\n\t}();\n\t\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = Database;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__dirname) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _fs = __webpack_require__(11);\n\t\n\tvar _fs2 = _interopRequireDefault(_fs);\n\t\n\tvar _path = __webpack_require__(2);\n\t\n\tvar _path2 = _interopRequireDefault(_path);\n\t\n\tvar _rotatingFileStream = __webpack_require__(12);\n\t\n\tvar _rotatingFileStream2 = _interopRequireDefault(_rotatingFileStream);\n\t\n\tvar _morgan = __webpack_require__(13);\n\t\n\tvar _morgan2 = _interopRequireDefault(_morgan);\n\t\n\tvar _winston = __webpack_require__(14);\n\t\n\tvar _winston2 = _interopRequireDefault(_winston);\n\t\n\tvar _moment = __webpack_require__(15);\n\t\n\tvar _moment2 = _interopRequireDefault(_moment);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar s_logger = Symbol('winston');\n\tvar instance = null;\n\t//If cfg is not set then these values will be used\n\t//you can add other options if you would like to expand what can be configured\n\t//@todo add a way to email error logs and custom log type\n\tvar defaultcfg = {\n\t    consoleLevel: 'info',\n\t    fileLevel: 'error'\n\t};\n\t//module service with singleton pattern\n\t\n\tvar loggerService = function () {\n\t    _createClass(loggerService, [{\n\t        key: 'timeStamp',\n\t        get: function get() {\n\t            return this._timeStamp;\n\t        }\n\t        /** @cfg = {consoleLevel: 'info', fileLevel = 'error'}\r\n\t           pass in a config object to change the level of the server only set this once in the system\r\n\t           It will apply to all loggers on the entire server the last one in wins here */\n\t\n\t    }]);\n\t\n\t    function loggerService() {\n\t        var _this = this;\n\t\n\t        _classCallCheck(this, loggerService);\n\t\n\t        if (!instance) {\n\t\n\t            //Setup Logger\n\t            // to test whether we have singleton or not\n\t            this._timeStamp = this.time;\n\t            var time = function time() {\n\t                return (0, _moment2.default)().format('YYYY-MM-DD h:mm:ss a');\n\t            };\n\t\n\t            //set up custom token for req:id and log with Morgan\n\t            _morgan2.default.token('id', function getId(req) {\n\t                return req.id;\n\t            });\n\t            //Make Morgan Write to a file\n\t            var logDirectory = _path2.default.join(__dirname, 'log');\n\t\n\t            // ensure log directory exists\n\t            //fs.existsSync(logDirectory) || fs.mkdirSync(logDirectory)\n\t\n\t            // create a rotating write stream this keep our log files from getting to big\n\t            var accessLogStream = (0, _rotatingFileStream2.default)('request.log', {\n\t                interval: '1d', // rotate daily\n\t                path: logDirectory\n\t            });\n\t\n\t            //set up winston\n\t            /** @todo: remove config options if they are being Set\r\n\t                using the defaultcfg let updateConfig handle this. */\n\t            this[s_logger] = new _winston2.default.Logger({\n\t                transports: [new _winston2.default.transports.File({\n\t                    level: defaultcfg.fileLevel,\n\t                    filename: 'app.log',\n\t                    handleExceptions: true,\n\t                    json: true,\n\t                    maxsize: 5242880, //5MB\n\t                    maxFiles: 5,\n\t                    colorize: false,\n\t                    timestamp: true,\n\t                    prettyprint: true\n\t                }), new _winston2.default.transports.Console({\n\t                    level: defaultcfg.consoleLevel,\n\t                    handleExceptions: true,\n\t                    json: false,\n\t                    colorize: true\n\t                })],\n\t                exitOnError: false\n\t            });\n\t            /** @todo change this to loop through cfg properties and only assign if properties match  */\n\t            var updateConfig = function updateConfig(cfg) {\n\t                defaultcfg = cfg;\n\t                _this[s_logger].transports.console.level = cfg.consoleLevel;\n\t                _this[s_logger].transports.file.level = cfg.fileLevel;\n\t            };\n\t\n\t            var logger = {\n\t                timeStamp: this._timeStamp,\n\t                time: time,\n\t                log: function log(message) {\n\t                    var category = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'info';\n\t                    _this[s_logger].log(category, message);\n\t                },\n\t                cfg: updateConfig,\n\t                dev: (0, _morgan2.default)(':id :method :status :url :response-time[3]', { stream: accessLogStream })\n\t            };\n\t\n\t            instance = logger;\n\t        }\n\t\n\t        return instance;\n\t    }\n\t\n\t    return loggerService;\n\t}();\n\t\n\texports.default = loggerService;\n\t/* WEBPACK VAR INJECTION */}.call(exports, \"/\"))\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"fs\");\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"rotating-file-stream\");\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"morgan\");\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"winston\");\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"moment\");\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"mongodb\");\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** server.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d36204fc002a9ab83c46\n **/","/** This is disables error in eslint for the next parameter in the error route below */\r\n/* eslint-disable no-unused-vars */\r\n\nimport express from 'express';\r\nimport path from 'path';\r\nimport compression from 'compression';\r\nimport cookieParser from 'cookie-parser';\nimport bodyParser from 'body-parser';\r\nimport methodOverride from 'method-override';\n\r\n//import other routes\r\nimport moviesRoute from '../src/server/routes/movie';\r\nimport {default as log} from '../src/server/core/logger';\r\n\r\n//Add logger info\r\nlet logger = new log();\r\n\r\n// sets config options on winston\r\nlogger.cfg({consoleLevel: 'debug',fileLevel: 'error'});\r\n\r\n// Import Database Connection here\r\nimport {default as Database} from  \"../src/server/data/db\";\r\n\r\n//Database Connection go here\r\nDatabase.connect('mongodb://api:!AgileRules4#@ds062059.mlab.com:62059/mic-pro').then(() => {\r\nlogger.log(\"Database is connected\")\r\n}).catch((error)=>{\r\n  logger.log(error, 'error')\r\n});\r\n\r\n// use process.env.PORT to set port when in production\r\nconst port = (process.env.PORT || 3000);\r\nconst app = express();\r\n\r\napp.use(compression());\r\n\r\n//Set Up app folders\r\napp.use(express.static('dist'));\r\napp.use('/app', express.static('./src/client/app'));\r\n\r\napp.use(bodyParser.urlencoded({\r\n  extended: true\r\n}))\r\napp.use(bodyParser.json())\r\n\r\napp.use(methodOverride())\r\n\r\napp.use(logger.dev);\r\n\r\n//Configure ejs vies\r\napp.set('view engine', 'ejs');\r\napp.set('views', path.join(__dirname,'../src/server/views/'));\r\n\r\n /** Mount Routes Here */\r\n//mount movie store module here\r\napp.use('/movies', moviesRoute);\r\n\r\n//cause error to occur\r\napp.use('/errortest', function (req, res, next) {\r\nlet err = {message: 'Test route is Testing Error Route', status: 509, stack: [{message: 'An error test', status: 505}, {message: 'From the Movie test error page',status: 501}]}\r\n  next(err)\r\n});\r\n\r\n\r\n// production error handler\r\n// no stacktraces leaked to user\r\napp.use(function (err, req, res, next) {\r\n  logger.log(err ,'error');\r\n  res.status(err['status'] || 500);\r\n  res.render('pages/error.ejs', {\r\n    message: err.message,\r\n    error: {}\r\n  });\r\n  })\r\n\r\napp.listen(port, function(err) {\r\n  logger.log(`application started on Port:${port}` ,'info');\r\n  if (err) {\r\n    logger.log(err);\r\n  }\n});\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./buildScripts/distServer.js\n **/","module.exports = require(\"express\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"express\"\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = require(\"path\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"path\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = require(\"compression\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"compression\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = require(\"cookie-parser\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"cookie-parser\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = require(\"body-parser\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"body-parser\"\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = require(\"method-override\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"method-override\"\n ** module id = 6\n ** module chunks = 0\n **/","/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-case-declarations */\r\n/** Restful Movie API routes */\r\nimport express from 'express';\r\nimport  {default as MovieService}  from '../api/movies';\r\nimport {default as Logger} from '../../server/core/logger';\r\n\r\nlet router = express.Router();\r\nlet movieService = new MovieService();\r\nlet logger = new Logger();\r\n\r\n\r\n// GET MOVIES\r\nrouter.get('/',movieService.get);\r\n\r\n// ADD\r\nrouter.post('/', movieService.save);\r\n\r\n//EDIT MOVIE\r\nrouter.put('/', movieService.save);\r\n\r\n//get movie details\r\nrouter.get('/:id', movieService.getbyId);\r\n\n// DELETE MOVIE\r\nrouter.delete('/:id', movieService.remove);\r\n\r\n\r\n\r\n\r\nexport default router;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/server/routes/movie.js\n **/","import {default as Database} from  \"../../server/data/db\";\r\nimport {default as Logger} from '../../server/core/logger';\r\nimport mongodb from 'mongodb';\r\nlet logger = new Logger();\r\n\r\nexport default class MovieService\r\n{\r\n  constructor(){\r\n\r\n\r\n  logger.log('Starting Movie AP', 'debug')\r\n// ADD OR EDIT MOVIE\r\n\r\n\r\n// GET MOVIES\r\nlet getMovieCollection = (req, res, next) => {\r\n    Database.db.collection('movies').find().toArray().then((movies) => {\r\n        res.json(movies);\r\n    }).\r\n    catch((error) => {\r\n         logger.log(`Mongo has a problem: ${error}`, 'debug')\r\n           next(error);\r\n    });\r\n};\r\n\r\nlet save = (req, res, next) => {\r\n    let movie = req.body;\r\n    if(movie._id)movie._id = new mongodb.ObjectID(movie._id.trim());\r\n    Database.db.collection('movies').save(req.body).then((result) => {\r\n    if(result === null)\r\n    {\r\n      logger.log(`Errror on Save adding Movie to the database`, 'debug')\r\n      next(`Result was null`);\r\n    }\r\n    else {\r\n        res.json(result);\r\n\r\n    }\r\n    }).\r\n    catch((error) => {\r\n     logger.log(`Mongo has a problem: ${error}`, 'debug')\r\n       next(error);\r\n});\r\n}\r\n\r\n// DELETE MOVIE\r\nlet remove = (req, res, next) => {\n     logger.log(`Trying to remove movie is: ${req.params['id'].trim()}`, 'info')\n    let movieId = new mongodb.ObjectID(req.params['id'].trim());\r\n    Database.db.collection('movies').remove({ _id: movieId }).then(() => {\r\n        res.sendStatus(200);\r\n    }).\r\n      catch((error) => {\r\n     logger.log(`Mongo has a problem: ${error}`, 'debug')\r\n       next(error);\r\n})\r\n};\r\nlet getMoviebyId = (req, res, next) =>\r\n  {\r\n    let movieId = new mongodb.ObjectID(req.params['id'].trim());\n    Database.db.collection('movies').findOne(movieId).then((result)=> {\r\n        logger.log(`the movie is ${JSON.stringify(result)}`, 'debug')\r\n        if(result === null)\r\n        {\r\n          logger.log(`No record Found`, 'debug')\r\n          next(`Result was null`);\r\n        }\r\n        else {\r\n          res.json(result);\r\n        }\r\n        }).\r\n         catch((error) => {\r\n         logger.log(`Mongo has a problem: ${error}`, 'debug')\r\n           next(error);\r\n         });\r\n};\r\nlet service = {\r\n    get: getMovieCollection,\r\n    getbyId: getMoviebyId,\r\n    save: save,\r\n    remove: remove\r\n};\r\n//return service\r\nreturn service;\r\n}\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/server/api/movies.js\n **/","/** This file is where tjhe backend database goes  */\r\nimport {default as Logger} from '../../server/core/logger'\r\nlet logger = new Logger();\r\nlet connectionString = '';\r\n\r\nimport mongodb from 'mongodb';\r\n\r\nclass Database {\r\n    static connect(dbconnection = 'mongodb://apiuser:!Agile$@ds117839.mlab.com:17839/live-exam-practice') {\r\n      connectionString = dbconnection;\r\n        return mongodb.MongoClient.connect(connectionString).then((db) => {\r\n            logger.log('successful db connection', 'info');/* eslint-disable no-console */\r\n            this.db = db;\r\n        }).catch((err) => {\r\n            logger.error(err,'error');\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexport default Database;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/server/data/db.js\n **/","import fs from 'fs';\r\nimport path from 'path';\r\nimport rfs from 'rotating-file-stream';\r\nimport morgan from 'morgan';\r\nimport winston from 'winston';\r\nimport moment from 'moment';\r\nlet s_logger = Symbol('winston');\r\nlet instance = null;\r\n//If cfg is not set then these values will be used\r\n//you can add other options if you would like to expand what can be configured\r\n//@todo add a way to email error logs and custom log type\r\nlet defaultcfg = {\r\n    consoleLevel: 'info',\r\n    fileLevel: 'error'\r\n}\r\n//module service with singleton pattern\r\nexport default class loggerService{\r\n  get timeStamp(){ return this._timeStamp}\r\n   /** @cfg = {consoleLevel: 'info', fileLevel = 'error'}\r\n      pass in a config object to change the level of the server only set this once in the system\r\n      It will apply to all loggers on the entire server the last one in wins here */\r\n  constructor(){\r\n    if (!instance)\r\n    {\r\n\r\n      //Setup Logger\r\n       // to test whether we have singleton or not\r\n      this._timeStamp = this.time;\r\n      let time = ()=>{ return moment().format('YYYY-MM-DD h:mm:ss a')}\r\n\r\n      //set up custom token for req:id and log with Morgan\r\n      morgan.token('id', function getId (req) {\r\n               return req.id\r\n         })\r\n      //Make Morgan Write to a file\r\n      var logDirectory = path.join(__dirname, 'log')\r\n\r\n      // ensure log directory exists\r\n      //fs.existsSync(logDirectory) || fs.mkdirSync(logDirectory)\n\r\n       // create a rotating write stream this keep our log files from getting to big\r\n       var accessLogStream = rfs('request.log', {\r\n        interval: '1d', // rotate daily\r\n       path: logDirectory\r\n      })\r\n\r\n      //set up winston\r\n      /** @todo: remove config options if they are being Set\r\n          using the defaultcfg let updateConfig handle this. */\r\n      this[s_logger] = new winston.Logger({\r\n          transports: [\r\n              new winston.transports.File({\r\n                  level: defaultcfg.fileLevel,\r\n                  filename: 'app.log',\r\n                  handleExceptions: true,\r\n                  json: true,\r\n                  maxsize: 5242880, //5MB\r\n                  maxFiles: 5,\r\n                  colorize: false,\r\n                  timestamp: true,\r\n                  prettyprint:true\r\n              }),\r\n              new winston.transports.Console({\r\n                  level: defaultcfg.consoleLevel,\r\n                  handleExceptions: true,\r\n                  json: false,\r\n                  colorize: true\r\n              })\r\n          ],\r\n          exitOnError: false\r\n      });\r\n      /** @todo change this to loop through cfg properties and only assign if properties match  */\r\n      let updateConfig= (cfg) =>\r\n      {\r\n        defaultcfg = cfg;\r\n        this[s_logger].transports.console.level = cfg.consoleLevel ;\r\n        this[s_logger].transports.file.level = cfg.fileLevel;\r\n\r\n      }\r\n\r\n\r\n      let logger ={\r\n        timeStamp: this._timeStamp,\r\n        time: time,\r\n        log:(message,category = 'info')=>{ this[s_logger].log(category,message)},\r\n        cfg: updateConfig,\r\n        dev: morgan(':id :method :status :url :response-time[3]',{stream: accessLogStream})\r\n      }\r\n\r\n\r\n      instance = logger;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return instance;\r\n  }\r\n\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/server/core/logger.js\n **/","module.exports = require(\"fs\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"fs\"\n ** module id = 11\n ** module chunks = 0\n **/","module.exports = require(\"rotating-file-stream\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"rotating-file-stream\"\n ** module id = 12\n ** module chunks = 0\n **/","module.exports = require(\"morgan\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"morgan\"\n ** module id = 13\n ** module chunks = 0\n **/","module.exports = require(\"winston\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"winston\"\n ** module id = 14\n ** module chunks = 0\n **/","module.exports = require(\"moment\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"moment\"\n ** module id = 15\n ** module chunks = 0\n **/","module.exports = require(\"mongodb\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"mongodb\"\n ** module id = 16\n ** module chunks = 0\n **/"],"sourceRoot":""}